snippet info "Haddock module info (short)" b
-- |
-- Module      :  `!v substitute(substitute(expand('%:r'), '[/\\]','.','g'),'^\.\?\%(\l[^\.]*\.\)*','','g')`
-- Description :  ${1:Short description}
-- Copyright   :  (c) `date +%Y` `!v g:snips_name` <`!v g:snips_email`>
-- License     :  ${2:BSD3}
-- Maintainer  :  `!v g:snips_name` <`!v g:snips_email`>
--
-- ${0:Long description}
--
endsnippet

snippet info-long "Haddock module info (long w/ Stability, Portability)" b
-- |
-- Module      :  `!v substitute(substitute(expand('%:r'), '[/\\]','.','g'),'^\.\?\%(\l[^\.]*\.\)*','','g')`
-- Description :  ${1:Short description}
-- Copyright   :  (c) `date +%Y` `!v g:snips_name` <`!v g:snips_email`>
-- License     :  ${2:BSD3}
--
-- Maintainer  :  `!v g:snips_name` <`!v g:snips_email`>
-- Stability   :  ${3:experimental}
-- Portability :  ${4:unknown}
--
-- ${0:Long description}
--
endsnippet

clearsnippets mod
snippet module "module A.B.C (…) where" b
module `!v substitute(substitute(expand('%:r'), '[/\\]','.','g'),'^\.\?\%(\l[^\.]*\.\)*','','g')` (
	$0
	) where
endsnippet

snippet ghcid-test "$> :main --match=…" b
-- $> :main --no-color --match=${1:`!v expand('%:t:r')`}
endsnippet
