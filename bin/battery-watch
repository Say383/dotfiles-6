#!/usr/bin/env python3

from dataclasses import dataclass
from typing import Any, List
import notify2  # type: ignore [import]
import os
import time


def slurp(filename: str) -> str:
    with open(filename) as f:
        return f.read()


@dataclass
class SysAttrs():
    path: str

    def _read_attr(self, attr: str) -> str:
        return slurp(os.path.join(self.path, attr))


@dataclass
class Battery(SysAttrs):
    capacity: int = 0
    present: bool = False

    def refresh(self) -> None:
        try:
            self.capacity = int(self._read_attr('capacity'))
            self.present = bool(int(self._read_attr('present')))
        except Exception:
            self.capacity = 0
            self.present = False


@dataclass
class AC(SysAttrs):
    online: bool = False

    def refresh(self) -> None:
        try:
            self.online = bool(int(self._read_attr('online')))
        except Exception:
            self.online = False


class Main():
    num_batteries: int = 2
    batteries: List[Battery]
    ac: AC
    notification: Any

    def __init__(self) -> None:
        sys_paths = [
            '/sys/class/power_supply/BAT%d' % n
            for n in range(self.num_batteries)
        ]
        self.batteries = [Battery(path=p) for p in sys_paths]
        self.ac = AC(path='/sys/class/power_supply/AC')

        self.notification = notify2.Notification(
            summary='Low battery', icon='battery-low')
        self.notification.set_urgency(notify2.URGENCY_CRITICAL)

    def refresh(self) -> None:
        for b in self.batteries:
            b.refresh()
        self.ac.refresh()

    def low(self) -> bool:
        return all([b.capacity <= 5 for b in self.batteries if b.present])

    def tick(self) -> None:
        self.refresh()
        if self.low() and not self.ac.online:
            self.notification.show()
        else:
            self.notification.close()

    def loop(self) -> None:
        while True:
            self.tick()
            time.sleep(30)


if __name__ == '__main__':
    notify2.init('battery-watch')
    Main().loop()
