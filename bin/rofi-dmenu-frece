#!/usr/bin/env bash

# wrapper around "rofi -dmenu" which adds history using frece
# rofi: https://github.com/davatorium/rofi
# frece: https://github.com/YodaEmbedding/frece

set -eu -o pipefail

options=$(unset GETOPT_COMPATIBLE POSIXLY_CORRECT && getopt -o "" --long "help,db:,sort:,remember-unknown" -- "$@")
eval "set -- $options"

unset db
unset sort
unset remember_unknown
while (( $# )); do
	opt=$1; shift
	case "$opt" in
		--help)
			echo "Usage: rofi-dmenu-frece --db <file> [--sort <frece sort>] [--remember-unknown] [-- <rofi optionsâ€¦>] <entries"
			exit
			;;

		--db) db=$1; shift ;;
		--sort) sort=$1; shift ;;
		--remember-unknown) remember_unknown=: ;;
		--) break ;;
	esac
done

: "${db:?}"
rofi_options=("-dmenu" "$@")

unset purge_old
[[ ${remember_unknown-} ]] || purge_old=:

frece update ${purge_old+--purge-old} "$db" /dev/stdin
exec </dev/null

entries=$(
	frece print ${sort+--sort "$sort"} "$db" \
	| rofi -kb-custom-1 "Shift+Delete" -kb-delete-entry "" "${rofi_options[@]}"
) && ret=$? || ret=$?

case $ret in
	0)  # Enter
		while read -r entry; do
			[[ ${remember_unknown-} ]] && { frece add "$db" "$entry" &>/dev/null || :; }
			frece increment "$db" "$entry" &>/dev/null || :
			printf "%s\n" "$entry"
		done <<<"$entries"
		;;

	10) # Shift+Delete
		frece print --sort none "$db" \
		| grep --invert-match --line-regexp --fixed-strings -e "$entries" \
		| frece update --purge-old "$db" /dev/stdin
		exit 1
		;;

	*)  # error
		exit 1
		;;
esac
