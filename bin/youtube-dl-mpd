#!/usr/bin/env bash

set -eu -o pipefail

# shellcheck source-path=..
. "$HOME"/bin/.o

mpd_music_dir="$(echo config | nc -N -U "$MPD_HOST" | awk '$1 == "music_directory:" { print $2 }')"
: "${mpd_music_dir:?}"
cache_dir_name=youtube-dl-mpd
my_cache_dir=~/.cache/"$cache_dir_name"

function prepare-cache {
	o mkdir -p "$my_cache_dir"
	o ln -sfT "$my_cache_dir" "$mpd_music_dir/$cache_dir_name"
	o find "$my_cache_dir"/ -type f -mtime +30 \( \! -name '.*' \) -print -delete
	o mpc update --wait "$cache_dir_name/"
}

function override-metadata {
	python3 -c '
from sys import argv
import taglib

f = taglib.File(argv[1])
f.tags["ALBUM"] = [f"""{f.tags["ARTIST"][0]} - {f.tags["ALBUM"][0]}"""]
f.tags["ALBUMARTIST"] = ["_youtube_dl_mpd"]
f.save()
	' "$1"
}

function helper {
	o cd "$my_cache_dir"

	(( $# == 1 )) || { printf '%s\n' '1 arg expected'; exit 1; }
	file="$(basename -- "$1")"
	[[ -f "$file" ]] || { printf '%s\n' "$file not in cache dir"; exit 1; }

	o override-metadata "$file" || :
	o mpc update --wait "$cache_dir_name/$file"
	o mpc add "$cache_dir_name/$file"
}

function player {
	prepare-cache
	o cd "$my_cache_dir"

	(( $# )) || { printf '%s\n' 'urls expected'; exit 1; }
	o youtube-dl \
		-f 'bestaudio[abr <= 320]/bestaudio/best' \
		--add-metadata \
		--no-mtime \
		--sleep-interval 1 \
		--max-sleep-interval 10 \
		--exec 'youtube-dl-mpd-helper {}' \
		"$@"
}

if [[ "$(basename -- "$0")" == "youtube-dl-mpd-helper" ]]; then
	helper "$@"
else
	player "$@"
fi
